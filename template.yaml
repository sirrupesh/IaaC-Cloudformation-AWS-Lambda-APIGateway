AWSTemplateFormatVersion: '2010-09-09'
Description: 'Calculator API with API Gateway and Lambda functions'

Resources:
  # Lambda Functions
  AddFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-add-function"
      Handler: add_function.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 10
      MemorySize: 128
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref AddFunctionS3Key

  SubtractFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-subtract-function"
      Handler: subtract_function.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 10
      MemorySize: 128
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref SubtractFunctionS3Key

  # Lambda Function Versions
  AddFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref AddFunction
      Description: 'Version 1.0.0'

  SubtractFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref SubtractFunction
      Description: 'Version 1.0.0'

  # Lambda Function Aliases
  AddFunctionAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref AddFunction
      FunctionVersion: !GetAtt AddFunctionVersion.Version
      Name: 'live'

  SubtractFunctionAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref SubtractFunction
      FunctionVersion: !GetAtt SubtractFunctionVersion.Version
      Name: 'live'

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # API Gateway
  CalculatorApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${AWS::StackName}-calculator-api"
      Description: 'Calculator API with add and subtract operations'
      EndpointConfiguration:
        Types:
          - REGIONAL

  # API Gateway Resources
  CalculatorResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref CalculatorApi
      ParentId: !GetAtt CalculatorApi.RootResourceId
      PathPart: 'calculator'

  AddResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref CalculatorApi
      ParentId: !Ref CalculatorResource
      PathPart: 'add'

  SubtractResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref CalculatorApi
      ParentId: !Ref CalculatorResource
      PathPart: 'subtract'

  # API Gateway Methods
  AddMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: AddFunctionAlias
    Properties:
      RestApiId: !Ref CalculatorApi
      ResourceId: !Ref AddResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddFunction.Arn}:live/invocations"

  SubtractMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: SubtractFunctionAlias
    Properties:
      RestApiId: !Ref CalculatorApi
      ResourceId: !Ref SubtractResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SubtractFunction.Arn}:live/invocations"

  # OPTIONS methods for CORS
  AddOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref CalculatorApi
      ResourceId: !Ref AddResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          ResponseModels:
            application/json: 'Empty'

  SubtractOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref CalculatorApi
      ResourceId: !Ref SubtractResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          ResponseModels:
            application/json: 'Empty'

  # API Gateway Deployment
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - AddMethod
      - SubtractMethod
      - AddOptionsMethod
      - SubtractOptionsMethod
    Properties:
      RestApiId: !Ref CalculatorApi
      Description: 'Production deployment'

  # API Gateway Stage
  ApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref CalculatorApi
      DeploymentId: !Ref ApiDeployment
      StageName: 'prod'

  # API Key
  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn:
      - ApiDeployment
    Properties:
      Name: !Sub "${AWS::StackName}-api-key"
      Description: 'API Key for Calculator API'
      Enabled: true
      StageKeys:
        - RestApiId: !Ref CalculatorApi
          StageName: !Ref ApiStage

  # Usage Plan
  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub "${AWS::StackName}-usage-plan"
      Description: 'Usage plan for Calculator API'
      ApiStages:
        - ApiId: !Ref CalculatorApi
          Stage: !Ref ApiStage
      Throttle:
        BurstLimit: 10
        RateLimit: 5

  # API Key to Usage Plan Association
  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

  # Lambda Permissions
  AddLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: AddFunctionAlias
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub "${AddFunction}:live"
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${CalculatorApi}/*/POST/calculator/add"

  SubtractLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: SubtractFunctionAlias
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub "${SubtractFunction}:live"
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${CalculatorApi}/*/POST/calculator/subtract"

Parameters:
  LambdaCodeBucket:
    Type: String
    Description: 'S3 bucket containing the Lambda function code'
    
  AddFunctionS3Key:
    Type: String
    Description: 'S3 key for the Add function code'
    
  SubtractFunctionS3Key:
    Type: String
    Description: 'S3 key for the Subtract function code'

Outputs:
  ApiUrl:
    Description: 'URL of the API Gateway endpoint'
    Value: !Sub "https://${CalculatorApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStage}"

  ApiKeyId:
    Description: 'ID of the API Key for accessing the Calculator API'
    Value: !Ref ApiKey

  AddFunctionArn:
    Description: 'ARN of the Add Lambda function'
    Value: !GetAtt AddFunction.Arn

  SubtractFunctionArn:
    Description: 'ARN of the Subtract Lambda function'
    Value: !GetAtt SubtractFunction.Arn
